package App::TriplejPlaysLocal::Twitter;

use autodie;
use 5.010;
use Carp qw(croak);
use Method::Signatures;
use Try::Tiny;
use Net::Twitter::Lite::WithAPIv1_1;
use App::TriplejPlaysLocal::Song;
use Config::Tiny;
use Data::Dumper;
use Moo;
use namespace::clean;

# ABSTRACT: Twitter Shortcuts

# VERSION: Generated by DZP::OurPkg:Version

=head1 SYNOPSIS

    use App::TriplejPlaysLocal::Twitter;

    my $twitter = App::TriplejPlaysLocal::Twitter->new();

=head1 DESCRIPTION

Twitter Shortcuts.

=cut

my $Ref = sub {
    croak("auth isn't a 'App::TriplejPlaysLocal::Tweets' object!") 
      unless $_[0]->DOES("App::TriplejPlaysLocal::Tweets");
};

has 'tweets'    => ( is => 'rw', required => 1, isa => $Ref );
has '_config'   => ( is => 'ro', lazy => 1, builder => 1 );
has '_twitter'  => ( is => 'ro', lazy => 1, builder => 1 );
has '_since_id'  => ( is => 'rw', default => sub { undef } );


method _build__config {
  return Config::Tiny->read( $ENV{HOME}."/.triplejplays" );
} 

method _build__twitter {
  return Net::Twitter::Lite::WithAPIv1_1->new(
    consumer_key        => $self->_config->{_}{consumer_key},
    consumer_secret     => $self->_config->{_}{consumer_secret},
    access_token        => $self->_config->{_}{access_token},
    access_token_secret => $self->_config->{_}{access_token_secret},
    ssl                 => 1,
  );
} 

method get_tweets {
  my $statuses;
  try {
    my $timeline = { screen_name => 'triplejplays', count => 50 };
    $timeline->{since_id} = $self->_since_id if $self->_since_id;
    $statuses = $self->_twitter->user_timeline($timeline);
  } catch {
    #log this
    #warn "caught error: $_"; # not $@
    say Dumper($_);
    say "Error getting tweets";
  };
  
  my $id = undef;
  for my $status ( @$statuses ) {
    if (! $id ) {
      $id = $status->{id};
      $self->_since_id($id);
    }
    $self->tweets->push_val(
      App::TriplejPlaysLocal::Song->new(
        id    => $status->{id},
        tweet => $status->{text},
      )
    );
  }
}

method tweet($tweet_text) {
  try {
    $self->_twitter->update($tweet_text);
  } catch {
    say Dumper($_);
    say "Error tweeting";
  }
}

1;
